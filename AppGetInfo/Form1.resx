<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CxYsWLAQVPh/q3UOtingf/wAAAAASUVORK5CYII=
</value>
  </data>
</root>